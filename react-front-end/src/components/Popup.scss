$maincolor: #A8DCB9;
$primary: #E4F9F5;
$secondarycolor: #FAA381;
$icons: #05648A;

.popup{
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  background-color: rgba(0,0,0,0.2);
  display: flex;
  justify-content: center;
  align-items: center;
  
}

.popup-inner{
  position: relative;
  padding: 52px;
  width: 800px;
  max-width: 2000px;
  background-color: $primary;
  border-radius: 15px;
  height: 850px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

}

.popup-inner .close-btn{
  position: absolute;
  top: 16px;
  right: 16px;
	border-radius: 50%;
}

.innerbutton{
  width: 200px;
  height:50px;
  align-content: center;
  border-radius: 15px;
  justify-content: center;
  padding: 2px;

}

.innerbutton:hover{
  background-color: $secondarycolor
}

.special{
  border-style: solid;
  border-color: rgb(12, 12, 12);
  background-color: $secondarycolor
}

.popupHeader{
  background-color: $maincolor;
  color: $icons;
  border-radius: 15px;
  display: flex;
  align-content: center;
  justify-content: center;
  width: 800px;
}


.input {
	
	// needs to be relative so the :focus span is positioned correctly
	position:relative;
	
	// bigger font size for demo purposes
	font-size: 1.5em;
	
	// the border gradient
  background: linear-gradient(0deg, rgba(106, 159, 124, 1) 0%, rgba(143, 209, 165, 1) 100%);
	
	// the width of the input border
	padding: 3px;
	
	// we want inline fields by default
	display: inline-block;
	
	// we want rounded corners no matter the size of the field
	border-radius: 9999em;
	
	// style of the actual input field
	*:not(span) {
		position: relative;
		display: inherit;
		border-radius: inherit;
		margin: 0;
		border: none;
		outline: none;
		padding: 0 .325em;
		z-index: 1; // needs to be above the :focus span
		width: 500px;
    height: 50px;


		// summon fancy shadow styles when focussed
		&:focus + span {
			opacity: 1;
			transform: scale(1);
		}
	}
	
	// we don't animate box-shadow directly as that can't be done on the GPU, only animate opacity and transform for high performance animations.
	span {
		
		transform: scale(.993, .94); // scale it down just a little bit
		transition: transform .5s, opacity .25s;
		opacity: 0; // is hidden by default
		
		position:absolute;
		z-index: 0; // needs to be below the field (would block input otherwise)
		margin:4px; // a bit bigger than .input padding, this prevents background color pixels shining through
		left:0;
		top:0;
		right:0;
		bottom:0;
		border-radius: inherit;
		pointer-events: none; // this allows the user to click through this element, as the shadow is rather wide it might overlap with other fields and we don't want to block those.
		
		// fancy shadow styles
		box-shadow: inset 0 0 0 3px #fff,
			0 0 0 4px #fff,
			3px -3px 30px #1beabd, 
			-3px 3px 30px $maincolor;
	}
	
}


input {
	font-family: inherit;
	line-height:inherit;
	color:#2e3750;
	min-width:12em;
}

::placeholder {
	color:#000000;
}




.submit{
  display: flex;
  font-size: 40px;
  color: white;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  justify-content: center;
  align-items: center;
  background-color: $maincolor;
  border-radius: 100px;
  max-width: 1000px;
  margin-bottom: 10px;

}

.close {
  position: absolute;
  right: 32px;
  top: 32px;
  width: 32px;
  height: 32px;
  opacity: 0.3;
}
.close:hover {
  opacity: 1;
}
.close:before, .close:after {
  position: absolute;
  left: 15px;
  content: ' ';
  height: 33px;
  width: 2px;
  background-color: #333;
}
.close:before {
  transform: rotate(45deg);
}
.close:after {
  transform: rotate(-45deg);
}

.section{
  display: flex;
  flex-direction: row;
  width: 1000px;
}
.section1{
  display: flex;
  flex-direction: column;
  width: 50px;
  padding-left: 250px;
}
.section2{
  display: flex;
  flex-direction: column;
  width: 500px;
  padding-left: 300px;
}
